/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    TreeNode build_bst(TreeNode root, int x){
        if(root==null){
            root = new TreeNode(x);
            return root;
        }
        if(root.val>=x){
            root.left = build_bst(root.left,x);
        }
        if(root.val <x){
            root.right = build_bst(root.right,x);
            
        }
        return root;
    }
    
    public TreeNode bstFromPreorder(int[] preorder) {
        TreeNode root = new TreeNode(0);
        for(int i: preorder){
            root.left = build_bst(root.left,i);
            
        }
        return root.left;
    }
}