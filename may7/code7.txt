/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int xdepth = -1;
    int ydepth = -1;
    TreeNode xparent = null;
    TreeNode yparent = null;
    public boolean isCousins(TreeNode root, int x, int y) {
        getDepthParent(root,y,x,0,null);
        return xdepth==ydepth && xparent!=yparent;
    }
    
    public void getDepthParent(TreeNode root,int y, int x, int depth, TreeNode parent){
        if(root==null){
            return;
        }
        if(root.val==x){
            xparent = parent;
            xdepth = depth;
        }else if(root.val==y){
            yparent = parent;
            ydepth = depth;
        }
        else{
            getDepthParent(root.left, y,x , depth+1 , root);
            getDepthParent(root.right , y , x , depth+1 , root);
        }
    }
}