/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode oddEvenList(ListNode head) {
        if(head == null || head.next == null){
            return head;
        }
        ListNode oddhead = new ListNode();
        ListNode evenhead = new ListNode();
        ListNode oddend = oddhead;
        ListNode evenend = evenhead;
        
        ListNode ptr = head;
        int index = 1;
        while(ptr!=null){
            if(index%2==0){
                evenend.next = ptr;
                evenend = evenend.next;
            }else{
                oddend.next = ptr;
                oddend = oddend.next;
            }
            index++;
            ptr = ptr.next;
            
        }
        oddend.next = evenhead.next;
        evenend.next = null;
        return oddhead.next;
    }
}